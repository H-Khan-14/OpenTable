{"version":3,"sources":["components/SearchBar/actions.js","components/Pagination/index.jsx","components/RestaurantList/index.jsx","components/SearchBar/index.js","rootReducer/index.js","components/SearchBar/reducer.js","App.js","index.js"],"names":["fetchRestaurantList","city","price","zip","page","dispatch","getState","type","queryUrl","restaurants","cityParam","priceParam","zipParam","console","log","axios","url","params","then","data","payload","fetchRestaurantListSuccess","catch","err","Pagination","handleClick","props","restaurantList","this","totalEntries","perPage","pagesTotal","Math","ceil","pagination","Array","from","length","v","k","className","map","num","onClick","key","style","backgroundColor","React","Component","connect","state","refine","postal","RestaurantCard","restaurant","name","address","area","RestaurantList","index","SearchBar","onInputChange","event","target","value","setState","onFormSubmit","preventDefault","onSubmit","for","onChange","isLoading","loading","error","combineReducers","action","current_page","per_page","total_entries","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.49b78427.chunk.js","sourcesContent":["import axios from 'axios';\nimport { queryHelpers } from '@testing-library/react';\n\nexport const FETCH_RESTAURANT_LIST_SUCCESS = 'FETCH_RESTAURANT_LIST_SUCCESS';\nexport const FETCH_RESTAURANT_LIST_ERROR = 'FETCH_RESTAURANT_LIST_ERROR';\nexport const FETCH_RESTAURANT_LIST_LOADING = 'FETCH_RESTAURANT_LIST_LOADING';\n\nconst fetchRestaurantListSuccess = (data) => ({\n  type: FETCH_RESTAURANT_LIST_SUCCESS,\n  payload: data,\n});\n\nconst fetchRestaurantListError = (error) => ({\n  type: FETCH_RESTAURANT_LIST_SUCCESS,\n  payload: error,\n});\n\nconst fetchRestaurantListLoading = () => ({\n  type: FETCH_RESTAURANT_LIST_LOADING,\n});\n\nexport const fetchRestaurantList = (city, price, zip, page) => (\n  dispatch,\n  getState\n) => {\n  dispatch(fetchRestaurantListLoading());\n  let queryUrl = 'https://opentable.herokuapp.com/api/restaurants';\n  let { restaurants } = getState();\n  let cityParam = city || restaurants.city;\n  let priceParam = price || restaurants.price;\n  let zipParam = zip || restaurants.zip;\n\n  console.log(cityParam);\n  return axios({\n    url: queryUrl,\n    params: {\n      city: cityParam,\n      price: priceParam,\n      zip: zipParam,\n      page: page,\n    },\n  })\n    .then((data) => {\n      console.log(data);\n      dispatch(\n        fetchRestaurantListSuccess({\n          data: data.data,\n          url: queryUrl,\n          city: cityParam,\n          price: priceParam,\n          zip: zipParam,\n          page,\n        })\n      );\n    })\n    .catch((err) => {\n      dispatch(fetchRestaurantListError(err));\n    });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchRestaurantList } from '../SearchBar/actions';\nimport './style.css';\n\nclass Pagination extends React.Component {\n  handleClick = (page) => {\n    this.props.restaurantList(null, null, null, page);\n  };\n  render() {\n    const { totalEntries, perPage, page, restaurantList } = this.props;\n    if (!totalEntries || !restaurantList) {\n      return '';\n    }\n\n    const pagesTotal = Math.ceil(totalEntries / perPage);\n    const pagination = Array.from({ length: pagesTotal }, (v, k) => k + 1);\n    return (\n      <div className=\"pagination\">\n        {pagination.map((num) => {\n          return (\n            <div\n              className=\"paginationBlock\"\n              onClick={() => this.handleClick(num)}\n              key={num}\n              style={{ backgroundColor: num === page && 'gray' }}\n            >\n              {num}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    page: state.restaurants.page,\n    perPage: state.restaurants.perPage,\n    totalEntries: state.restaurants.totalEntries,\n    restaurantList: state.restaurants.restaurants,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  restaurantList: (city, refine, price, postal) =>\n    dispatch(fetchRestaurantList(city, refine, price, postal)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Pagination from '../Pagination';\nimport './style.css';\n\nconst RestaurantCard = ({ restaurant }) => {\n  return (\n    <div className=\"restaurantCard\">\n      <h1>{restaurant.name}</h1>\n      <p>{restaurant.address}</p>\n      <p>{restaurant.area}</p>\n      <p>{restaurant.price}</p>\n    </div>\n  );\n};\n\nclass RestaurantList extends React.Component {\n  render() {\n    if (!this.props.restaurants) {\n      return '';\n    }\n    return (\n      <>\n        <div className=\"container\">\n          {this.props.restaurants.map((restaurant, index) => {\n            return <RestaurantCard key={index} restaurant={restaurant} />;\n          })}\n        </div>\n        <div className=\"footer\">\n          <Pagination />\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { restaurants: state.restaurants.restaurants };\n};\n\nexport default connect(mapStateToProps, null)(RestaurantList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchRestaurantList } from './actions';\nimport './style.css';\n\nclass SearchBar extends React.Component {\n  state = { city: '', price: '', zip: '' };\n\n  onInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    this.props.restaurantList(\n      this.state.city,\n      this.state.price,\n      this.state.zip\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"searchSection\">\n        <form onSubmit={this.onFormSubmit}>\n          <h1>Restaurants</h1>\n\n          <div className=\"searchContainer\">\n            <div className=\"stack\">\n              <label for=\"city\">City</label>\n              <input\n                className=\"inputBox\"\n                name=\"city\"\n                type=\"text\"\n                value={this.state.city}\n                onChange={this.onInputChange}\n              />\n            </div>\n            <div className=\"stack\">\n              <label for=\"price\">Price</label>\n              <input\n                className=\"inputBox\"\n                name=\"price\"\n                type=\"text\"\n                value={this.state.price}\n                onChange={this.onInputChange}\n              />\n            </div>\n            <div className=\"stack\">\n              <label for=\"zip\">Postal Code</label>\n              <input\n                className=\"inputBox\"\n                name=\"postal\"\n                type=\"text\"\n                value={this.state.zip}\n                onChange={this.onInputChange}\n              />\n            </div>\n            <button className=\"searchBtn\">Submit</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.restaurants.loading,\n  error: state.restaurants.error,\n  restaurants: state.restaurants.restaurants,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  restaurantList: (city, refine, price, zip) =>\n    dispatch(fetchRestaurantList(city, refine, price, zip)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import { combineReducers } from 'redux';\nimport restaurantListReducer from '../components/SearchBar/reducer';\n\nexport default combineReducers({\n  restaurants: restaurantListReducer,\n});\n","import {\n  FETCH_RESTAURANT_LIST_SUCCESS,\n  FETCH_RESTAURANT_LIST_ERROR,\n  FETCH_RESTAURANT_LIST_LOADING,\n} from './actions';\n\nexport default (\n  state = { restaurants: null, error: null, loading: false },\n  action\n) => {\n  switch (action.type) {\n    case FETCH_RESTAURANT_LIST_SUCCESS:\n      return {\n        ...state,\n        restaurants: action.payload.data.restaurants,\n        page: action.payload.data.current_page,\n        perPage: action.payload.data.per_page,\n        totalEntries: action.payload.data.total_entries,\n        error: null,\n        loading: false,\n        url: action.payload.url,\n        city: action.payload.city,\n        price: action.payload.price,\n        zip: action.payload.zip,\n      };\n    case FETCH_RESTAURANT_LIST_ERROR:\n      return {\n        ...state,\n        restaurants: null,\n        error: action.payload,\n        loading: false,\n      };\n    case FETCH_RESTAURANT_LIST_LOADING:\n      return {\n        ...state,\n        restaurants: null,\n        error: null,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport RestaurantList from './components/RestaurantList';\nimport SearchBar from './components/SearchBar';\nimport Pagination from './components/Pagination';\nimport reducers from './rootReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nconst App = () => {\n  return (\n    <div>\n      <Provider store={store}>\n        <SearchBar />\n        <RestaurantList />\n      </Provider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}